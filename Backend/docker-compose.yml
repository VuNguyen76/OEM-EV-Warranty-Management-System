version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: warranty_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: warranty123
      MONGO_INITDB_DATABASE: warranty_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - warranty_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: warranty_redis
    restart: unless-stopped
    command: redis-server --requirepass warranty123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - warranty_network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: User/Dockerfile
    container_name: warranty_user_service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:warranty123@mongodb:27017/warranty_db?authSource=admin
      REDIS_URL: redis://:warranty123@redis:6379
      JWT_SECRET: 17c1f23b1afa99f9577811d98b1a7e6ae546933790e5b8aac76aa6cd22a46908
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - warranty_network
    volumes:
      - ./User:/app/User
      - ./shared:/app/shared
      - ./node_modules:/app/node_modules

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: warranty_api_gateway
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      GATEWAY_PORT: 3000
      USER_SERVICE_URL: http://user-service:3001
      ALLOWED_ORIGINS: "*"
      JWT_SECRET: 17c1f23b1afa99f9577811d98b1a7e6ae546933790e5b8aac76aa6cd22a46908
    ports:
      - "3000:3000"
    depends_on:
      - user-service
    networks:
      - warranty_network
    volumes:
      - ./api-gateway:/app/api-gateway
      - ./shared:/app/shared
      - ./node_modules:/app/node_modules

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  warranty_network:
    driver: bridge
